class Solution {
public:
    int maxChunksToSorted(vector<int>& arr) {
        //用动态规划的方法记录前i个数的最大值，和第i个数到最后的最小值
        //两个数组
        //然后遍历这个数组，当左边的最大值小于右边的最小值时说明是一个chunk
        int len=arr.size();
        if(len==0)
            return 0;
        vector<int> leftmax;
        leftmax.resize(len);
        vector<int> rightmin;
        rightmin.resize(len);
        leftmax[0]=arr[0];
        rightmin[len-1]=arr[len-1];
        for(int i=1;i<len;i++)
        {
            leftmax[i]=max(leftmax[i-1],arr[i]);
        }
        for(int i=len-2;i>=0;i--)
        {
            rightmin[i]=min(rightmin[i+1],arr[i]);
        }
        
        int ans=1;
        for(int i=0;i<len-1;i++)
        {
            if(leftmax[i]<rightmin[i+1])
                ans++;
        }
        return ans;
    }
};
